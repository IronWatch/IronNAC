@page "/"
@rendermode InteractiveServer
@using CaptivePortal.Database
@using CaptivePortal.Database.Entities
@using CaptivePortal.Models
@using CaptivePortal.Services
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using System.Net
@using Microsoft.EntityFrameworkCore
@inject NavigationManager nav
@inject WebAuthenticationService webAuth
@inject ProtectedLocalStorage protectedLocalStorage
@inject IHttpContextAccessor httpContextAccessor
@inject CaptivePortalDbContext db

<PageTitle>IronNAC</PageTitle>

<div class="w-100 d-flex justify-content-center p-2">
    <div class="card bg-body-tertiary shadow flex-grow-1 p-4" style="max-width: 600px;">
        <h1 class="text-center">IronNAC</h1>
        <h3 class="text-center">Network Access Control</h3>

        <hr/>

        @if (AccessToken is null)
        {
            <button class="btn btn-primary btn-lg" @onclick="@(_ => nav.NavigateTo("/login"))">Login</button>
        }
        else
        {
            <h5 class="text-center">Hello @AccessToken.Name</h5>
            <button class="btn btn-primary btn-lg mt-1 mb-3" @onclick="@(_ => nav.NavigateTo("/user/account"))">My Account</button>

            @if (AccessToken.IsStaff)
            {
                <button class="btn btn-outline-info btn-lg mb-3" @onclick="@(_ => nav.NavigateTo("/admin/devices"))">Staff Portal</button>
            }

            @if (AccessToken.IsAdmin)
            {
                <button class="btn btn-outline-info btn-lg mb-3" @onclick="@(_ => nav.NavigateTo("/admin/devices"))">Admin Portal</button>
            }

            <button class="btn btn-outline-warning btn-lg mt-3" @onclick="@(_ => nav.NavigateTo("/logout"))">Logout</button>
        }

        <hr />

        <h5>Your IP Address:</h5>
        <div class="w-100 d-flex mb-3">
            <input class="flex-grow-1 me-2 fs-4" type="text" value="@(DetectedIPAddress)" disabled />
            <button class="btn btn-outline-info"><span class="mdi mdi-content-copy mdi-24px"></span></button>
        </div>

        <h5>Your MAC Address:</h5>
        <div class="w-100 d-flex">
            <input class="flex-grow-1 me-2 fs-4" type="text" value="@(Device?.DeviceMac?.ToUpper())" disabled />
            <button class="btn btn-outline-info"><span class="mdi mdi-content-copy mdi-24px"></span></button>
        </div>

        <hr/>

        <p class="text-center">Need Support? <a href="https://ironwatch.net/" target="_blank">Contact IronWatch LLC</a></p>
    </div>
</div>

@code
{
    public AccessToken? AccessToken { get; set; }

    public IPAddress? DetectedIPAddress { get; set; }
    public Device? Device { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;

        AccessToken = await webAuth.WebCheckLoggedInAsync(protectedLocalStorage);

        DetectedIPAddress = httpContextAccessor.HttpContext?.Connection?.RemoteIpAddress;
        
        if (DetectedIPAddress is not null)
        {
            Device = await db.Devices
                .AsNoTracking()
                .Where(x => x.DetectedDeviceIpAddress == DetectedIPAddress.ToString())
                .FirstOrDefaultAsync();
        }

        await InvokeAsync(StateHasChanged);
    }
}
